"use strict";(()=>{var e={};e.id=635,e.ids=[635],e.modules={67096:e=>{e.exports=require("bcrypt")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},24729:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>c,routeModule:()=>w,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{POST:()=>l});var s=r(49303),o=r(88716),n=r(60670),p=r(67096),i=r.n(p),u=r(8690),d=r(87070);async function l(e){let{email:t,password:r}=await e.json();if(!t||!r)return new d.NextResponse("Missing Fields",{status:400});let a=t.toLowerCase();if(!await u._.user.findUnique({where:{email:a}}))throw Error("Email does not exists");let s=await i().hash(r,10);try{return await u._.user.update({where:{email:a},data:{password:s,passwordResetToken:null,passwordResetTokenExp:null}}),d.NextResponse.json("Password Updated",{status:200})}catch(e){return new d.NextResponse("Internal Error",{status:500})}}let w=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/forgot-password/update/route",pathname:"/api/forgot-password/update",filename:"route",bundlePath:"app/api/forgot-password/update/route"},resolvedPagePath:"D:\\GITHUB-WASIS\\new\\compro-codecrew\\src\\app\\api\\forgot-password\\update\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:g}=w,x="/api/forgot-password/update/route";function h(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},8690:(e,t,r)=>{r.d(t,{_:()=>s});let a=require("@prisma/client"),s=global.prisma||new a.PrismaClient({log:["query"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,972],()=>r(24729));module.exports=a})();